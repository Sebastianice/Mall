// <auto-generated />
using System;
using MallInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MallInfrastructure.Migrations
{
    [DbContext(typeof(MallContext))]
    [Migration("20231031123128_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MallDomain.entity.mall.MallOrderAddress", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CityName")
                        .HasColumnType("longtext");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("longtext");

                    b.Property<string>("RegionName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserPhone")
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.ToTable("Order_Addresses", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mall.MallShoppingCartItem", b =>
                {
                    b.Property<long>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GoodsCount")
                        .HasColumnType("int");

                    b.Property<long>("GoodsId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CartItemId");

                    b.ToTable("Shopping_Cart_Items", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mall.MallUser", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IntroduceSign")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LoginName")
                        .HasColumnType("longtext");

                    b.Property<string>("NickName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordMd5")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mall.MallUserAddress", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CityName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("DefaultFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("longtext");

                    b.Property<string>("RegionName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserPhone")
                        .HasColumnType("longtext");

                    b.HasKey("AddressId");

                    b.ToTable("User_Addresses", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mall.MallUserToken", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("User_Tokens", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallAdminUser", b =>
                {
                    b.Property<long>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LoginPassword")
                        .HasColumnType("longtext");

                    b.Property<string>("LoginUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("NickName")
                        .HasColumnType("longtext");

                    b.HasKey("AdminUserId");

                    b.ToTable("Admin_Users", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallAdminUserToken", b =>
                {
                    b.Property<long>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AdminUserId");

                    b.ToTable("Addmin_User_Tokens", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallCarousel", b =>
                {
                    b.Property<long>("CarouselId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CarouselRank")
                        .HasColumnType("int");

                    b.Property<string>("CarouselUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CreateUser")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UpdateUser")
                        .HasColumnType("bigint");

                    b.HasKey("CarouselId");

                    b.ToTable("Carouseries", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallGoodsCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("CategoryLevel")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<int>("CategoryRank")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CategoryId");

                    b.ToTable("Goods_Categories", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallGoodsInfo", b =>
                {
                    b.Property<long>("GoodsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CreateUser")
                        .HasColumnType("bigint");

                    b.Property<string>("GoodsCarousel")
                        .HasColumnType("longtext");

                    b.Property<long>("GoodsCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("GoodsCoverImg")
                        .HasColumnType("longtext");

                    b.Property<string>("GoodsDetailContent")
                        .HasColumnType("longtext");

                    b.Property<string>("GoodsIntro")
                        .HasColumnType("longtext");

                    b.Property<string>("GoodsName")
                        .HasColumnType("longtext");

                    b.Property<int>("GoodsSellStatus")
                        .HasColumnType("int");

                    b.Property<int>("OriginalPrice")
                        .HasColumnType("int");

                    b.Property<int>("SellingPrice")
                        .HasColumnType("int");

                    b.Property<int>("StockNum")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UpdateUser")
                        .HasColumnType("bigint");

                    b.HasKey("GoodsId");

                    b.ToTable("Goods_Info", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallIndexConfig", b =>
                {
                    b.Property<long>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ConfigName")
                        .HasColumnType("longtext");

                    b.Property<int>("ConfigRank")
                        .HasColumnType("int");

                    b.Property<int>("ConfigType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CreateUser")
                        .HasColumnType("bigint");

                    b.Property<long>("GoodsId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UpdateUser")
                        .HasColumnType("bigint");

                    b.HasKey("ConfigId");

                    b.ToTable("Index_Config", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallOrder", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrderNo")
                        .HasColumnType("longtext");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PayStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PayTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PayType")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("MallDomain.entity.mannage.MallOrderItem", b =>
                {
                    b.Property<long>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GoodsCount")
                        .HasColumnType("int");

                    b.Property<string>("GoodsCoverImg")
                        .HasColumnType("longtext");

                    b.Property<long>("GoodsId")
                        .HasColumnType("bigint");

                    b.Property<string>("GoodsName")
                        .HasColumnType("longtext");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("SellingPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.ToTable("Order_Items", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
